version: '3.7'

services:
  app:
    image: chaosdorf/dockerserver:latest
    networks:
      - traefik
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        delay: 60s
        max_attempts: 5
      update_config:
        order: start-first
      resources:
        limits:
          cpus: '0.25'
          memory: 100M
        reservations:
          cpus: '0.125'
          memory: 8M
      labels:
        - traefik.docker.network=traefik_net
        - traefik.http.services.dockerserver.loadbalancer.server.port=80
        - "traefik.http.routers.dockerserver-http.rule=Host(`dockerserver.chaosdorf.space`) || Host(`dockerserver`)"
        - traefik.http.routers.dockerserver-http.middlewares=global-headers@file,dockerserver-error@docker
        - traefik.http.routers.dockerserver-http.service=dockerserver@docker
        - "traefik.http.routers.dockerserver-https.rule=Host(`dockerserver.chaosdorf.space`) || Host(`dockerserver`)"
        - traefik.http.routers.dockerserver-https.middlewares=global-headers@file,dockerserver-error@docker
        - traefik.http.routers.dockerserver-https.service=dockerserver@docker
        - traefik.http.routers.dockerserver-https.tls=true
        - traefik.http.routers.dockerserver-https.tls.certresolver=default
        - traefik.http.routers.dockerserver-https.tls.domains[0].main=*.chaosdorf.space
        - traefik.http.middlewares.dockerserver-error.errors.service=error@docker
        - traefik.http.middlewares.dockerserver-error.errors.status=401,403,404,429,503
        - traefik.http.middlewares.dockerserver-error.errors.query=/{status}.html

networks:
  traefik:
    driver: overlay
    external: true
    name: traefik_net

